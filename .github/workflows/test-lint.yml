on:
  push:
    branches:
      - main

  pull_request:

  merge_group:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: go.mod

      - name: golangci-lint
        uses: golangci/golangci-lint-action@9fae48acfc02a90574d7c304a1758ef9895495fa # v7.0.1

      - name: Run tests
        run: |
          go test -v ./...

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Lint markdown
        uses: DavidAnson/markdownlint-cli2-action@05f32210e84442804257b2a6f20b273450ec8265 # v19.1.0
        with:
          config: .markdownlint.yaml

      - name: Get actionlint release
        id: get-actionlint-release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          eval "$(gh api \
            /repos/rhysd/actionlint/releases/latest \
            --jq '.assets[] |
              select (.name | endswith("_linux_amd64.tar.gz")) |
              "node_id=\(.node_id | @sh); browser_download_url=\(.browser_download_url | @sh)"')"

          echo "node_id=${node_id}" | tee -a "${GITHUB_OUTPUT}"
          echo "browser_download_url=${browser_download_url}" | tee -a "${GITHUB_OUTPUT}"

          mkdir -p ~/.local/bin
          echo "${HOME}/.local/bin" | tee -a "${GITHUB_PATH}"

      - name: Cache actionlint
        id: cache-actionlint
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.local/bin/actionlint
          key: actionlint-${{ steps.get-actionlint-release.outputs.node_id }}

      - name: Download actionlint
        id: get_actionlint
        if: steps.cache-actionlint.outputs.cache-hit != 'true'
        env:
          RELEASE: ${{ steps.get-actionlint-release.outputs.browser_download_url }}
        run: |
          curl -sSL "${RELEASE}" \
            | tar -C ~/.local/bin/ -xzf - actionlint

          chmod +x ~/.local/bin/actionlint

      - name: Check workflow files
        run: actionlint -color

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1

      - name: Run zizmor
        env:
          GH_TOKEN: ${{ github.token }}
        run: uvx zizmor --format sarif . > results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16
        with:
          sarif_file: results.sarif
          category: zizmor
